{"version":3,"sources":["webpack:///./src/app/componentPage/sendvalue/sendvalue-routing.module.ts","webpack:///./src/app/componentPage/sendvalue/sendvalue.component.css","webpack:///./src/app/componentPage/sendvalue/sendvalue.component.html","webpack:///./src/app/componentPage/sendvalue/sendvalue.component.ts","webpack:///./src/app/componentPage/sendvalue/sendvalue.module.ts","webpack:///./src/app/componentPage/sonvalue/sonvalue.component.css","webpack:///./src/app/componentPage/sonvalue/sonvalue.component.html","webpack:///./src/app/componentPage/sonvalue/sonvalue.component.ts"],"names":[],"mappings":"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","file":"componentPage-sendvalue-sendvalue-module.js","sourcesContent":["\nimport {SendvalueComponent} from './sendvalue.component';\nexport const SendValueRoutes = [{\n  path:\"\",\n  component:SendvalueComponent\n}];\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">父组件向组件传值</div>\\n    <div class=\\\"panel-body\\\">\\n        <app-sonvalue [value]=\\\"parentValue\\\" [total]=\\\"totalValue\\\" (myValueEvent)=\\\"acceptValue($event)\\\"></app-sonvalue>\\n    </div>\\n  </div>\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">父组件向组件传值</div>\\n    <div class=\\\"panel-body\\\">\\n        <p>我接收到子组件传递过来的值：<strong class=\\\"text-success\\\">{{acceptFromSon | json}}</strong></p>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-sendvalue',\n  templateUrl: './sendvalue.component.html',\n  styleUrls: ['./sendvalue.component.css']\n})\nexport class SendvalueComponent implements OnInit {\n\n  /*\n  * 父组件向子组件传参\n  * */\n  //父组件默认传值定义\n  private parentValue:number=0;\n  //随机数初始化值\n  private totalValue:number=0;\n  //接受子组件传递过来的值\n  private acceptFromSon:any;\n\n\n  // 设置传参定时器发射函数，实时向子组件传递不同的参数\n  private setPlaySend():void{\n      setInterval(()=>{\n          this.parentValue=Number.parseInt((Math.random()*200).toString());\n          this.totalValue+=this.parentValue;\n      },1000)\n  }\n\n  public acceptValue($event:Event){\n      this.acceptFromSon=$event;\n  }\n\n  constructor() {}\n  ngOnInit(){\n      this.setPlaySend();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport { SendValueRoutes } from './sendvalue-routing.module';\nimport { SendvalueComponent } from './sendvalue.component';\nimport {SonvalueComponent} from '../sonvalue/sonvalue.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(SendValueRoutes)\n  ],\n  declarations: [SendvalueComponent,SonvalueComponent]\n})\nexport class SendvalueModule { }\n","module.exports = \"strong{font-size:16px;}\\r\\n.line{border:1px solid #7B1FA2;padding:10px;}\\r\\n\"","module.exports = \"<div class=\\\"line\\\">\\n  <p class=\\\"text-danger\\\">我接收到父组件传送过来的单值是: <strong class=\\\"text-primary\\\">{{value}}</strong></p>\\n  <p class=\\\"text-danger\\\">我接收到父组件传送过来的总值是: <strong class=\\\"text-primary\\\">{{total}}</strong></p>\\n  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"sendParent()\\\">点击传到父组件</button>\\n</div>\\n\\n\"","import { Component, OnInit,Input,Output,EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-sonvalue',\n  templateUrl: './sonvalue.component.html',\n  styleUrls: ['./sonvalue.component.css']\n})\nexport class SonvalueComponent implements OnInit {\n\n  //父组件向子组件传参 自定义属性 +@Input\n  //子组件向父组件传参 自定义事件 +@output\n  @Input() value:number;\n  @Input() total:number;\n  @Output() myValueEvent:EventEmitter<any>=new EventEmitter();\n  private arrNameList=['LG','GL','LIUGANG'];\n  private index=0;\n  private timer=null;\n\n  /*\n  * 子组件向父组件传参\n  * */\n  public sendParent():any{\n      clearInterval(this.timer);\n      this.timer=setInterval(()=>{\n          if(this.index>this.arrNameList.length-1) {\n             this.index=0;\n          }\n          this.myValueEvent.emit({'name':this.arrNameList[this.index],\"age\":Number.parseInt((Math.random()*100).toString())});\n          this.index++;\n      },600)\n  }\n  constructor() {}\n  ngOnInit() {}\n\n}\n"],"sourceRoot":""}