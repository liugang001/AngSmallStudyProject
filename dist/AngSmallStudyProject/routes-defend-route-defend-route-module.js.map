{"version":3,"sources":["webpack:///./node_modules/ngx-cookie-service/cookie-service/cookie.service.js","webpack:///./node_modules/ngx-cookie-service/index.js","webpack:///./src/app/routes/defend-route/defend-route.component.css","webpack:///./src/app/routes/defend-route/defend-route.component.html","webpack:///./src/app/routes/defend-route/defend-route.component.ts","webpack:///./src/app/routes/defend-route/defend-route.module.ts","webpack:///./src/app/routes/defend-route/route-login/route-login.component.css","webpack:///./src/app/routes/defend-route/route-login/route-login.component.html","webpack:///./src/app/routes/defend-route/route-login/route-login.component.ts","webpack:///./src/app/routes/defend-route/route-main/route-main.component.css","webpack:///./src/app/routes/defend-route/route-main/route-main.component.html","webpack:///./src/app/routes/defend-route/route-main/route-main.component.ts","webpack:///./src/app/service/defend.guard.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AAC6B;AACV;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,mDAAmD;AACnD;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gDAAgD,EAAE,UAAU;AAC5D,oDAAoD,kCAAkC;AACtF;AACA;AACA,CAAC;AACO;AACR;AACA,KAAK,iEAAmB;AACxB;AACA;AACA,4CAA4C;AAC5C,KAAK,gCAAgC,gIAAkC,IAAI;AAC3E,EAAE;AACF,0C;;;;;;;;;;;;;;;;AC5IA;AACA,iC;;;;;;;;;;;ACDA,0BAA0B,yBAAyB,KAAK,kBAAkB,4BAA4B,oBAAoB,oBAAoB,uBAAuB,0BAA0B,yBAAyB,kBAAkB,yBAAyB,sBAAsB,KAAK,S;;;;;;;;;;;ACA9R,soB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACD;AACV;AAOvC;IAEE,8BAAoB,aAA2B,EAAS,MAAa;QAAjD,kBAAa,GAAb,aAAa,CAAc;QAAS,WAAM,GAAN,MAAM,CAAO;I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","file":"routes-defend-route-defend-route-module.js","sourcesContent":["// This service is based on the `ng2-cookies` package which sadly is not a service and does\n// not use `DOCUMENT` injection and therefore doesn't work well with AoT production builds.\n// Package: https://github.com/BCJTI/ng2-cookies\nimport { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nvar CookieService = (function () {\n    function CookieService(\n        // The type `Document` may not be used here. Although a fix is on its way,\n        // we will go with `any` for now to support Angular 2.4.x projects.\n        // Issue: https://github.com/angular/angular/issues/12631\n        // Fix: https://github.com/angular/angular/pull/14894\n        document) {\n        this.document = document;\n        // To avoid issues with server side prerendering, check if `document` is defined.\n        this.documentIsAccessible = document !== undefined;\n    }\n    /**\n     * @param name Cookie name\n     * @returns {boolean}\n     */\n    CookieService.prototype.check = function (name) {\n        if (!this.documentIsAccessible) {\n            return false;\n        }\n        name = encodeURIComponent(name);\n        var regExp = this.getCookieRegExp(name);\n        var exists = regExp.test(this.document.cookie);\n        return exists;\n    };\n    /**\n     * @param name Cookie name\n     * @returns {any}\n     */\n    CookieService.prototype.get = function (name) {\n        if (this.documentIsAccessible && this.check(name)) {\n            name = encodeURIComponent(name);\n            var regExp = this.getCookieRegExp(name);\n            var result = regExp.exec(this.document.cookie);\n            return decodeURIComponent(result[1]);\n        }\n        else {\n            return '';\n        }\n    };\n    /**\n     * @returns {}\n     */\n    CookieService.prototype.getAll = function () {\n        if (!this.documentIsAccessible) {\n            return {};\n        }\n        var cookies = {};\n        var document = this.document;\n        if (document.cookie && document.cookie !== '') {\n            var split = document.cookie.split(';');\n            for (var i = 0; i < split.length; i += 1) {\n                var currentCookie = split[i].split('=');\n                currentCookie[0] = currentCookie[0].replace(/^ /, '');\n                cookies[decodeURIComponent(currentCookie[0])] = decodeURIComponent(currentCookie[1]);\n            }\n        }\n        return cookies;\n    };\n    /**\n     * @param name    Cookie name\n     * @param value   Cookie value\n     * @param expires Number of days until the cookies expires or an actual `Date`\n     * @param path    Cookie path\n     * @param domain  Cookie domain\n     * @param secure  Secure flag\n     */\n    CookieService.prototype.set = function (name, value, expires, path, domain, secure) {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        var cookieString = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';';\n        if (expires) {\n            if (typeof expires === 'number') {\n                var dateExpires = new Date(new Date().getTime() + expires * 1000 * 60 * 60 * 24);\n                cookieString += 'expires=' + dateExpires.toUTCString() + ';';\n            }\n            else {\n                cookieString += 'expires=' + expires.toUTCString() + ';';\n            }\n        }\n        if (path) {\n            cookieString += 'path=' + path + ';';\n        }\n        if (domain) {\n            cookieString += 'domain=' + domain + ';';\n        }\n        if (secure) {\n            cookieString += 'secure;';\n        }\n        this.document.cookie = cookieString;\n    };\n    /**\n     * @param name   Cookie name\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     */\n    CookieService.prototype.delete = function (name, path, domain) {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        this.set(name, '', -1, path, domain);\n    };\n    /**\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     */\n    CookieService.prototype.deleteAll = function (path, domain) {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        var cookies = this.getAll();\n        for (var cookieName in cookies) {\n            if (cookies.hasOwnProperty(cookieName)) {\n                this.delete(cookieName, path, domain);\n            }\n        }\n    };\n    /**\n     * @param name Cookie name\n     * @returns {RegExp}\n     */\n    CookieService.prototype.getCookieRegExp = function (name) {\n        var escapedName = name.replace(/([\\[\\]\\{\\}\\(\\)\\|\\=\\;\\+\\?\\,\\.\\*\\^\\$])/ig, '\\\\$1');\n        return new RegExp('(?:^' + escapedName + '|;\\\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g');\n    };\n    return CookieService;\n}());\nexport { CookieService };\nCookieService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nCookieService.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n]; };\n//# sourceMappingURL=cookie.service.js.map","export * from './cookie-service/cookie.service';\n//# sourceMappingURL=index.js.map","module.exports = \"button {\\r\\n  margin-right: 15px;\\r\\n}\\r\\n\\r\\n.content {\\r\\n  border: 2px solid red;\\r\\n  height: 300px;\\r\\n  padding: 10px;\\r\\n  margin-top: 10px;\\r\\n  border-radius: 10px;\\r\\n  line-height: 280px;\\r\\n  color: blue;\\r\\n  text-align: center;\\r\\n  font-size: 40px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">路由守卫操作</div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"top-dis\\\">\\n         <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"setMyCookie()\\\">设置Cookie</button>\\n         <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"clearMyCookie()\\\">清除Cookie</button>\\n         <button class=\\\"btn btn-warning\\\" type=\\\"button\\\" (click)=\\\"gotoRouteByCookie()\\\">跳转到另一个路由</button>\\n      </div>\\n      <div class=\\\"content\\\">\\n          <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CookieService} from 'ngx-cookie-service';\nimport {Router} from '@angular/router';\n@Component({\n  selector: 'app-defend-route',\n  templateUrl: './defend-route.component.html',\n  styleUrls: ['./defend-route.component.css'],\n  providers:[CookieService]\n})\nexport class DefendRouteComponent implements OnInit {\n\n  constructor(private cookieService:CookieService,private router:Router) {}\n  //设置cookie\n  public setMyCookie(){\n     this.cookieService.set(\"userId\",\"123456789\");\n     console.log(\"设置cookie userId 成功\")\n  };\n  //清除cookie\n  public clearMyCookie(){\n    this.cookieService.delete('userId');\n    console.log(\"删除cookie userId 成功\")\n  }\n  //通过cookie判断\n  public gotoRouteByCookie(){\n      if(this.cookieService.get(\"userId\")){\n          this.router.navigate([\"./routemain/defendRoute/routeMain\"])\n      }else{\n          this.router.navigate([\"./routemain/defendRoute/routeLogin\"])\n      }\n  }\n\n\n  ngOnInit(){}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DefendRouteComponent } from './defend-route.component';\nimport {RouterModule} from '@angular/router';\nimport {RouteLoginComponent} from './route-login/route-login.component';\nimport {RouteMainComponent} from './route-main/route-main.component';\nimport {DefendGuard} from '../../service/defend.guard';\nimport {CookieService} from 'ngx-cookie-service';\n//路由守卫\nconst DefendRoutes=[{\n   path:\"\",\n   component:DefendRouteComponent,\n   children:[\n      {\n        path:\"routeMain\",\n        component:RouteMainComponent,\n        canActivate:[DefendGuard]\n      },\n      {\n        path:\"routeLogin\",\n        component:RouteLoginComponent\n      },\n      {\n        path:\"\",\n        redirectTo:\"/routemain/defendRoute/routeMain\",\n        canActivate:[DefendGuard]\n      }\n   ]\n}]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(DefendRoutes),\n  ],\n  declarations: [DefendRouteComponent,RouteLoginComponent,RouteMainComponent],\n  providers:[DefendGuard,CookieService]\n})\nexport class DefendRouteModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n    我是登录页面\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-route-login',\n  templateUrl: './route-login.component.html',\n  styleUrls: ['./route-login.component.css']\n})\nexport class RouteLoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"p{\\r\\n  /*animation: move 1.5s linear infinite;*/\\r\\n  font-size:48px;\\r\\n}\\r\\n@-webkit-keyframes move {\\r\\n  0% {\\r\\n    -webkit-transform: scale(0);\\r\\n            transform: scale(0);\\r\\n  }\\r\\n  25% {\\r\\n    -webkit-transform: scale(.25);\\r\\n            transform: scale(.25);\\r\\n  }\\r\\n  50% {\\r\\n    -webkit-transform: scale(.5);\\r\\n            transform: scale(.5);\\r\\n  }\\r\\n  75%{\\r\\n    -webkit-transform:scale(.75);\\r\\n            transform:scale(.75);\\r\\n  }\\r\\n  100%{\\r\\n    -webkit-transform:scale(1);\\r\\n            transform:scale(1);\\r\\n  }\\r\\n}\\r\\n@keyframes move {\\r\\n  0% {\\r\\n    -webkit-transform: scale(0);\\r\\n            transform: scale(0);\\r\\n  }\\r\\n  25% {\\r\\n    -webkit-transform: scale(.25);\\r\\n            transform: scale(.25);\\r\\n  }\\r\\n  50% {\\r\\n    -webkit-transform: scale(.5);\\r\\n            transform: scale(.5);\\r\\n  }\\r\\n  75%{\\r\\n    -webkit-transform:scale(.75);\\r\\n            transform:scale(.75);\\r\\n  }\\r\\n  100%{\\r\\n    -webkit-transform:scale(1);\\r\\n            transform:scale(1);\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<p>这是主要内容页面</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-route-main',\n  templateUrl: './route-main.component.html',\n  styleUrls: ['./route-main.component.css']\n})\nexport class RouteMainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {CanActivate} from '@angular/router';\nimport {Injectable} from '@angular/core';\nimport {CookieService} from 'ngx-cookie-service';\nimport {Router} from '@angular/router';\n\n//路由守卫 状态\n@Injectable()\nexport class DefendGuard implements CanActivate{\n  constructor(\n    private router:Router,\n    private cookieService:CookieService\n  ){}\n  canActivate():boolean{\n      var userId=this.cookieService.get(\"userId\");\n      if(!userId){\n          console.log(\"not exist\")\n          this.router.navigate(['./routemain/defendRoute/routeLogin']);\n          return false;\n      }\n      return true;\n  }\n}\n\n"],"sourceRoot":""}